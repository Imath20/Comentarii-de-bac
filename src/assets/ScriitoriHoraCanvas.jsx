import React, { useRef, useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';

// 5 array-uri goale pentru contururi (fiecare contur = array de puncte [ [x, y], ... ])
export const horaContours = [
  [ [132.8, 74.1], [136.2, 67.4], [143.9, 66.1], [150.6, 64.1], [157.3, 58.7], [166.2, 56.7], [172.8, 56.7], [179.5, 57.4], [186.2, 54.7], [192.8, 56.1], [201.7, 58.1], [210.6, 56.1], [218.4, 60.1], [223.9, 64.1], [230.6, 67.4], [231.7, 70.7], [232.8, 74.7], [238.4, 79.4], [238.4, 85.4], [237.3, 88.7], [231.7, 94.7], [232.8, 99.4], [236.2, 102.7], [238.4, 107.4], [242.8, 112.7], [242.8, 116.7], [241.7, 119.4], [241.7, 123.4], [242.8, 126.1], [240.6, 128.7], [237.3, 131.4], [243.9, 134.1], [251.7, 140.1], [258.4, 146.1], [262.8, 152.1], [268.4, 159.4], [270.6, 164.1], [272.8, 169.4], [276.2, 175.4], [281.7, 184.1], [282.8, 188.1], [288.4, 193.4], [291.7, 202.7], [295.1, 210.1], [298.4, 217.4], [301.7, 220.7], [302.8, 225.4], [300.6, 228.7], [297.3, 230.7], [285.1, 224.7], [279.5, 222.1], [275.1, 222.1], [270.6, 223.4], [267.3, 223.4], [263.9, 224.7], [260.6, 226.1], [260.6, 232.7], [258.4, 235.4], [251.7, 238.7], [252.8, 247.4], [252.8, 256.7], [252.8, 265.4], [253.9, 272.1], [250.6, 275.4], [251.7, 278.7], [250.6, 282.1], [248.4, 288.1], [249.5, 300.1], [248.4, 312.7], [255.1, 318.7], [269.5, 325.4], [272.8, 330.1], [267.3, 334.7], [256.2, 336.7], [242.8, 336.7], [225.1, 332.1], [215.1, 331.4], [205.1, 328.7], [203.9, 325.4], [206.2, 316.7], [201.7, 302.1], [200.6, 284.1], [199.5, 282.1], [197.3, 274.1], [195.1, 267.4], [189.5, 243.4], [186.2, 252.1], [181.7, 266.1], [180.6, 270.1], [177.3, 272.7], [177.3, 279.4], [173.9, 283.4], [170.6, 290.1], [163.9, 317.4], [166.2, 322.7], [165.1, 328.1], [157.3, 331.4], [150.6, 332.7], [138.4, 336.7], [123.9, 337.4], [108.4, 337.4], [103.9, 332.7], [105.1, 329.4], [111.7, 320.7], [120.6, 316.1], [120.6, 282.1], [121.7, 281.4], [118.4, 277.4], [120.6, 272.7], [121.7, 244.1], [118.4, 241.4], [111.7, 242.7], [102.8, 240.1], [92.8, 232.7], [87.3, 222.1], [82.8, 206.1], [81.7, 184.7], [93.9, 165.4], [115.1, 142.1], [129.5, 134.7], [148.4, 128.7], [147.3, 128.7], [132.8, 124.1], [132.8, 120.7], [127.3, 116.7], [123.9, 112.7], [125.1, 108.1], [120.6, 106.1], [117.3, 102.1], [123.9, 97.4], [120.6, 95.4], [118.4, 90.7], [121.7, 86.1], [121.7, 78.7], [135.1, 73.4]], // Creangă
  [ [257.3, 224.7], [261.7, 218.7], [267.3, 212.0], [273.9, 208.7], [271.7, 205.3], [281.7, 185.3], [293.9, 168.0], [301.7, 149.3], [316.2, 138.7], [339.5, 128.7], [331.7, 124.7], [330.6, 122.7], [321.7, 120.0], [326.2, 111.3], [323.9, 107.3], [322.8, 101.3], [323.9, 97.3], [321.7, 94.0], [318.4, 92.7], [317.3, 84.7], [313.9, 80.7], [313.9, 73.3], [319.5, 70.0], [322.8, 61.3], [332.8, 58.0], [339.5, 53.3], [351.7, 52.7], [362.8, 49.3], [373.9, 52.0], [381.7, 56.0], [391.7, 55.3], [399.5, 58.7], [410.6, 63.3], [418.4, 70.7], [421.7, 74.0], [422.8, 80.0], [423.9, 87.3], [428.4, 93.3], [430.6, 98.0], [428.4, 102.7], [425.1, 108.0], [422.8, 111.3], [422.8, 114.7], [429.5, 118.0], [428.4, 120.0], [416.2, 120.0], [420.6, 124.7], [417.3, 126.0], [402.8, 128.0], [413.9, 131.3], [425.1, 135.3], [436.2, 140.0], [445.1, 147.3], [453.9, 159.3], [468.4, 184.7], [477.3, 208.7], [475.1, 210.0], [488.4, 223.3], [488.4, 228.7], [485.1, 233.3], [480.6, 238.0], [471.7, 238.0], [478.4, 232.0], [471.7, 228.7], [467.3, 226.0], [461.7, 224.7], [455.1, 232.0], [448.4, 233.3], [442.8, 230.7], [447.3, 226.7], [451.7, 214.7], [446.2, 216.0], [428.4, 183.3], [430.6, 216.7], [428.4, 220.7], [433.9, 246.0], [435.1, 249.3], [425.1, 253.3], [430.6, 311.3], [427.3, 312.7], [428.4, 322.0], [437.3, 330.0], [438.4, 335.3], [428.4, 339.3], [413.9, 339.3], [403.9, 337.3], [399.5, 331.3], [393.9, 332.0], [388.4, 312.7], [387.3, 313.3], [376.2, 257.3], [367.3, 255.3], [360.6, 309.3], [362.8, 328.0], [349.5, 332.7], [343.9, 331.3], [332.8, 334.0], [321.7, 334.7], [301.7, 334.7], [297.3, 330.7], [297.3, 328.7], [317.3, 314.7], [320.6, 254.7], [309.5, 250.7], [317.3, 221.3], [315.1, 220.7], [313.9, 191.3], [300.6, 217.3], [302.8, 220.7], [302.8, 227.3], [297.3, 231.3], [289.5, 233.3], [285.1, 224.0], [277.3, 221.3], [268.4, 224.0], [261.7, 225.3]], // Eminescu
  [ [497.3, 73.2], [505.1, 66.5], [521.7, 64.5], [525.1, 57.2], [538.4, 51.2], [551.7, 47.2], [561.7, 47.2], [571.7, 47.2], [581.7, 49.9], [595.1, 51.9], [602.8, 55.9], [607.3, 63.9], [609.5, 69.9], [615.1, 72.5], [623.9, 79.2], [630.6, 83.2], [628.4, 88.5], [623.9, 93.2], [616.2, 93.9], [620.6, 98.5], [619.5, 103.9], [615.1, 108.5], [606.2, 111.9], [600.6, 109.9], [596.2, 116.5], [592.8, 121.2], [586.2, 123.9], [593.9, 127.9], [603.9, 131.2], [612.8, 134.5], [623.9, 137.2], [631.7, 139.9], [637.3, 147.9], [638.4, 151.2], [640.6, 159.9], [640.6, 167.2], [642.8, 173.9], [643.9, 181.2], [642.8, 186.5], [641.7, 193.2], [639.5, 199.2], [637.3, 205.2], [636.2, 213.2], [635.1, 217.2], [632.8, 221.2], [632.8, 227.2], [627.3, 233.2], [621.7, 237.9], [617.3, 237.9], [617.3, 314.5], [613.9, 318.5], [618.4, 325.2], [622.8, 329.9], [619.5, 335.9], [613.9, 337.9], [599.5, 337.9], [591.7, 339.2], [582.8, 333.2], [575.1, 331.2], [576.2, 317.2], [572.8, 317.2], [557.3, 243.9], [547.3, 313.9], [547.3, 317.9], [547.3, 329.9], [543.9, 332.5], [530.6, 331.9], [523.9, 334.5], [516.2, 336.5], [493.9, 335.9], [483.9, 333.2], [482.8, 326.5], [497.3, 323.9], [509.5, 316.5], [503.9, 314.5], [503.9, 237.9], [496.2, 235.2], [499.5, 199.9], [486.2, 218.5], [487.3, 227.2], [487.3, 232.5], [483.9, 235.9], [477.3, 238.5], [467.3, 239.9], [459.5, 238.5], [456.2, 231.9], [452.8, 231.2], [443.9, 229.9], [442.8, 222.5], [447.3, 215.2], [497.3, 145.9], [502.8, 140.5], [510.6, 135.9], [533.9, 129.2], [525.1, 121.9], [516.2, 113.9], [513.9, 99.2], [518.4, 87.9], [509.5, 88.5], [503.9, 84.5], [499.5, 79.2], [497.3, 75.2], [497.3, 73.2]], // Caragiale
  [ [656.2, 85.4], [655.1, 79.4], [653.9, 72.1], [656.2, 66.7], [663.9, 60.1], [672.8, 56.7], [686.2, 55.4], [696.2, 54.7], [709.5, 54.1], [719.5, 56.1], [729.5, 59.4], [739.5, 63.4], [746.2, 69.4], [750.6, 74.7], [753.9, 81.4], [750.6, 92.1], [753.9, 95.4], [756.2, 99.4], [755.1, 104.7], [751.7, 109.4], [745.1, 112.1], [738.4, 110.7], [736.2, 116.1], [731.7, 122.7], [740.6, 130.7], [749.5, 132.7], [757.3, 134.7], [769.5, 138.7], [772.8, 142.1], [773.9, 146.7], [773.9, 151.4], [772.8, 157.4], [772.8, 164.1], [772.8, 170.1], [772.8, 174.7], [772.8, 178.7], [772.8, 183.4], [772.8, 189.4], [772.8, 194.1], [772.8, 198.7], [772.8, 203.4], [772.8, 206.1], [772.8, 210.7], [771.7, 214.1], [767.3, 214.7], [770.6, 220.1], [772.8, 224.7], [772.8, 231.4], [768.4, 234.7], [762.8, 234.7], [762.8, 248.1], [753.9, 252.7], [753.9, 289.4], [752.8, 291.4], [752.8, 315.4], [752.8, 320.1], [756.2, 327.4], [757.3, 332.1], [755.1, 335.4], [749.5, 338.7], [738.4, 338.7], [725.1, 338.7], [718.4, 336.1], [715.1, 332.1], [718.4, 317.4], [712.8, 293.4], [710.6, 291.4], [701.7, 255.4], [697.3, 255.4], [691.7, 290.7], [688.4, 292.7], [689.5, 316.7], [691.7, 321.4], [691.7, 329.4], [687.3, 330.7], [673.9, 331.4], [665.1, 334.1], [656.2, 335.4], [639.5, 334.7], [629.5, 333.4], [630.6, 329.4], [652.8, 316.7], [650.6, 292.7], [648.4, 292.1], [647.3, 252.1], [635.1, 249.4], [638.4, 235.4], [635.1, 233.4], [630.6, 234.7], [626.2, 236.1], [619.5, 236.7], [615.1, 237.4], [610.6, 240.1], [599.5, 236.7], [591.7, 231.4], [600.6, 214.7], [599.5, 212.1], [638.4, 146.7], [646.2, 138.1], [657.3, 136.7], [667.3, 134.1], [669.5, 132.1], [663.9, 128.7], [660.6, 124.1], [656.2, 116.7], [657.3, 110.1], [656.2, 100.7], [656.2, 96.1], [656.2, 88.7]], // Slavici
  [ [732.8, 232.7], [728.4, 227.4], [731.7, 220.1], [743.9, 210.1], [737.3, 210.1], [776.2, 144.1], [787.3, 137.4], [803.9, 132.7], [797.3, 129.4], [788.4, 118.7], [782.8, 106.7], [781.7, 102.1], [782.8, 96.7], [781.7, 86.1], [776.2, 80.7], [778.4, 73.4], [782.8, 68.7], [788.4, 66.7], [793.9, 59.4], [806.2, 56.7], [817.3, 54.1], [827.3, 53.4], [837.3, 53.4], [851.7, 57.4], [869.5, 61.4], [877.3, 69.4], [880.6, 77.4], [881.7, 83.4], [881.7, 93.4], [886.2, 97.4], [887.3, 102.1], [885.1, 106.7], [880.6, 112.1], [872.8, 113.4], [867.3, 112.1], [865.1, 118.1], [857.3, 124.7], [860.6, 126.7], [865.1, 129.4], [891.7, 137.4], [897.3, 139.4], [902.8, 144.1], [911.7, 152.7], [915.1, 162.1], [923.9, 182.1], [925.1, 188.1], [919.5, 207.4], [918.4, 219.4], [913.9, 220.1], [911.7, 229.4], [906.2, 238.7], [900.6, 242.1], [898.4, 242.1], [897.3, 248.7], [887.3, 251.4], [895.1, 298.7], [891.7, 300.7], [891.7, 315.2], [889.5, 319.8], [893.9, 325.8], [897.3, 331.8], [895.1, 335.2], [887.3, 338.5], [873.9, 339.2], [859.5, 336.5], [856.2, 333.2], [858.4, 319.2], [855.1, 302.5], [849.5, 302.5], [837.3, 255.8], [831.7, 255.2], [827.3, 275.8], [829.5, 299.2], [828.4, 302.5], [827.3, 317.8], [830.6, 321.8], [829.5, 330.5], [813.9, 331.8], [810.6, 332.5], [802.8, 335.8], [790.6, 336.5], [772.8, 335.8], [768.4, 330.5], [770.6, 327.2], [791.7, 316.5], [791.7, 301.8], [787.3, 299.8], [786.2, 253.8], [773.9, 249.2], [780.6, 218.5], [777.3, 215.8], [771.7, 219.2], [773.9, 225.2], [770.6, 232.5], [766.2, 235.8], [760.6, 236.5], [756.2, 237.8], [751.7, 237.8], [749.5, 240.5], [745.1, 241.2], [733.9, 233.8]], // Rebreanu
];

// Point-in-polygon (ray-casting algorithm)
function isPointInPolygon(point, polygon) {
  if (!Array.isArray(polygon) || polygon.length < 3) return false;
  let [x, y] = point;
  let inside = false;
  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
    if (!polygon[i] || !polygon[j]) continue;
    let xi = polygon[i][0], yi = polygon[i][1];
    let xj = polygon[j][0], yj = polygon[j][1];
    if (xi === undefined || yi === undefined || xj === undefined || yj === undefined) continue;
    let intersect = ((yi > y) !== (yj > y)) &&
      (x < (xj - xi) * (y - yi) / (yj - yi + 0.00001) + xi);
    if (intersect) inside = !inside;
  }
  return inside;
}


// Adaug datele scriitorilor
const scriitoriInfo = [
  {
    nume: 'Ion Creangă',
    date: '1837 – 1889',
    link: '/scriitor?name=creanga',
  },
  {
    nume: 'Mihai Eminescu',
    date: '1850 – 1889',
    link: '/scriitor?name=eminescu',
  },
  {
    nume: 'I.L. Caragiale',
    date: '1852 – 1912',
    link: '/scriitor?name=caragiale',
  },
  {
    nume: 'Ioan Slavici',
    date: '1848 – 1925',
    link: '/scriitor?name=slavici',
  },
  {
    nume: 'Liviu Rebreanu',
    date: '1885 – 1944',
    link: '/scriitor?name=rebreanu',
  },
];

// DEBUG: setează pe ce contur adaugi puncte (0-4)
const DEBUG_CONTOUR_INDEX = 0; // modifică aici pentru fiecare scriitor

const ScriitoriHoraCanvas = () => {
  const canvasRef = useRef(null);
  const [debugPoints, setDebugPoints] = useState([]);
  const [hoveredIndex, setHoveredIndex] = useState(null);
  const [mousePos, setMousePos] = useState({ x: 0, y: 0 });
  const navigate = useNavigate();

  useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext('2d');
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // Desenează conturul la hover
    if (hoveredIndex !== null && horaContours[hoveredIndex] && horaContours[hoveredIndex].length > 2) {
      ctx.beginPath();
      ctx.moveTo(horaContours[hoveredIndex][0][0], horaContours[hoveredIndex][0][1]);
      for (let i = 1; i < horaContours[hoveredIndex].length; i++) {
        ctx.lineTo(horaContours[hoveredIndex][i][0], horaContours[hoveredIndex][i][1]);
      }
      ctx.closePath();
      const isDark = document.body.classList.contains('dark-theme');
      ctx.strokeStyle = isDark ? '#fff' : '#ffb347';
      ctx.lineWidth = 4;
      ctx.globalAlpha = 0.92;
      ctx.shadowColor = isDark ? '#fff' : '#ffb347';
      ctx.shadowBlur = 16;
      ctx.stroke();
      ctx.globalAlpha = 1;
      ctx.shadowBlur = 0;
    }

    // --- DEBUG drawing points (dezactivat) ---
    /*
    if (debugPoints.length === 0) return;

    // Desenează linii între puncte (debug)
    ctx.beginPath();
    ctx.moveTo(debugPoints[0][0], debugPoints[0][1]);
    for (let i = 1; i < debugPoints.length; i++) {
      ctx.lineTo(debugPoints[i][0], debugPoints[i][1]);
    }
    ctx.strokeStyle = 'rgba(255, 0, 0, 0.7)';
    ctx.lineWidth = 2;
    ctx.stroke();

    // Desenează puncte roșii (debug)
    debugPoints.forEach(([x, y]) => {
      ctx.beginPath();
      ctx.arc(x, y, 3, 0, 2 * Math.PI); // radius 3, cerc complet
      ctx.fillStyle = 'red';
      ctx.fill();
    });
    */
  }, [debugPoints, hoveredIndex]);

  // Detect hover pe canvas
  const handleMouseMove = (e) => {
    const canvas = canvasRef.current;
    const rect = canvas.getBoundingClientRect();
    const x = (e.clientX - rect.left) * (canvas.width / rect.width);
    const y = (e.clientY - rect.top) * (canvas.height / rect.height);
    setMousePos({ x: e.clientX - rect.left, y: e.clientY - rect.top });
    let found = null;
    for (let i = 0; i < horaContours.length; i++) {
      if (horaContours[i].length > 2 && isPointInPolygon([x, y], horaContours[i])) {
        found = i;
        break;
      }
    }
    setHoveredIndex(found);
  };

  const handleMouseLeave = () => {
    setHoveredIndex(null);
  };

  // Click pe scriitor: deschide linkul din info
  const handleClick = (e) => {
    if (hoveredIndex !== null && scriitoriInfo[hoveredIndex]) {
      navigate(scriitoriInfo[hoveredIndex].link);
      return;
    }
    // --- DEBUG adăugare puncte (dezactivat) ---
    /*
    const canvas = canvasRef.current;
    const rect = canvas.getBoundingClientRect();
    const x = (e.clientX - rect.left) * (canvas.width / rect.width);
    const y = (e.clientY - rect.top) * (canvas.height / rect.height);
    setDebugPoints(points => [...points, [x, y]]);
    console.log(`punct: [${x.toFixed(1)}, ${y.toFixed(1)}]`);
    */
  };

  return (
    <div style={{ position: 'relative', width: '100%', maxWidth: 900, margin: '0 auto' }}>
      <img
        src="/hora/Hora.webp"
        alt="Hora scriitorilor"
        style={{ width: '100%', display: 'block', borderRadius: '16px' }}
      />
      <canvas
        ref={canvasRef}
        width={1000}
        height={400}
        style={{
          position: 'absolute',
          left: 0,
          top: 0,
          width: '100%',
          height: '100%',
          pointerEvents: 'auto',
          background: 'transparent',
          cursor: 'pointer'
        }}
        onClick={handleClick}
        onMouseMove={handleMouseMove}
        onMouseLeave={handleMouseLeave}
      />
      {hoveredIndex !== null && scriitoriInfo[hoveredIndex] && (
        <div
          style={{
            position: 'absolute',
            left: mousePos.x + 18,
            top: mousePos.y - 10,
            background: 'rgba(255,255,255,0.01)',
            color: 'rgba(255,255,255,0.97)',
            fontWeight: 900,
            fontSize: '1.35rem',
            borderRadius: '0.5em',
            padding: '0.7em 1.3em 0.7em 1.3em',
            pointerEvents: 'none',
            boxShadow: '0 2px 12px 0 rgba(60,40,20,0.10)',
            zIndex: 10,
            minWidth: 190,
            textAlign: 'center',
            userSelect: 'none',
            transition: 'opacity 0.2s',
            opacity: 1,
            letterSpacing: '0.01em',
            lineHeight: 1.18,
          }}
        >
          <div style={{ fontSize: '1.22em', fontWeight: 900, marginBottom: 4 }}>{scriitoriInfo[hoveredIndex].nume}</div>
          <div style={{ fontSize: '1.05em', fontWeight: 700, marginBottom: 8 }}>{scriitoriInfo[hoveredIndex].date}</div>
          <div style={{ fontSize: '1em', fontWeight: 800, color: 'rgba(255,255,255,0.97)', marginTop: 2 }}>
            Apasă ca să vezi scriitorul
          </div>
        </div>
      )}
    </div>
  );
};

export default ScriitoriHoraCanvas; 